#include "_Parameters.h"
#include "__Parameters_User.h"

using namespace src;
using namespace std;


//========================================================================================================
// Обработчики класса Parameter
//========================================================================================================

//--------------------------------------------------------------------------------------------------------
// Обработчик декремента при редактировании параметра
//--------------------------------------------------------------------------------------------------------
void Parameter::decValueHandler(uint16_t x, uint8_t power)
{
 if(editingValue - x >= getMin()) {editingValue -= x;} else { editingValue = getMax(); } 
}


//--------------------------------------------------------------------------------------------------------
// Обработчик инкремента при редактировании параметра
//--------------------------------------------------------------------------------------------------------
void Parameter::incValueHandler (uint16_t x, uint8_t power)
{
 if(editingValue + x <= getMax() ) {editingValue += x;} else { editingValue = getMin(); } 
}



//--------------------------------------------------------------------------------------------------------
// Обработчик ввода при редактировании параметра
//--------------------------------------------------------------------------------------------------------

void Parameter::enterHandler (void)
{
 if(this == &par1)
   { /* Обработчик для параметра par1 */ }
}





//========================================================================================================
// Обработчики класса DecoratorCalibrated
// Декоратор объекта. Калибруемый
//========================================================================================================

//--------------------------------------------------------------------------------------------------------
// Обработчик декремента при редактировании параметра
//--------------------------------------------------------------------------------------------------------
void DecoratorCalibrated::decValueHandler(uint16_t x, uint8_t power)
{
  _parameter->decValueHandler(x, power);
}


//--------------------------------------------------------------------------------------------------------
// Обработчик инкремента при редактировании параметра
//--------------------------------------------------------------------------------------------------------
void DecoratorCalibrated::incValueHandler (uint16_t x, uint8_t power)
{
  _parameter->incValueHandler(x, power);
//  editingValue +=1;
}


//--------------------------------------------------------------------------------------------------------
// Обработчик ввода при редактировании параметра
//--------------------------------------------------------------------------------------------------------
void DecoratorCalibrated::enterHandler  (void)
{
  if(_parameter->getEditingValue() == 1){
//    _calibrating =1;
   setCalibrating();
  }
   else{
    _parameter->enterHandler(); 
   }
     
}



